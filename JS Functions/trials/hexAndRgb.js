// Для задания цветов в HTML и CSS используются числа в шестнадцатеричной системе счисления. Чтобы не возникало путаницы в определении системы счисления, перед шестнадцатеричным числом ставят символ решетки #, например, #135278. Обозначение цвета (rrggbb) разбивается на три составляющие, где первые два символа обозначают красную компоненту цвета, два средних — зеленую, а два последних — синюю. Таким образом каждый из трех цветов — красный, зеленый и синий — может принимать значения от 00 до FF в шестнадцатеричной системе исчисления.
//
//     solution.js
// При работе с цветами часто нужно получить отдельные значения красного, зеленого и синего (RGB) компонентов цвета в десятичной системе исчисления и наоборот. Реализуйте и экспортируйте функции rgbToHex() и hexToRgb(), которые возвращают соответствующие представление цвета.
//
//     Примеры:
// hexToRgb('#24ab00'); // { r: 36, g: 171, b: 0 }
//
// rgbToHex(36, 171, 0); // '#24ab00'
// Подсказки:
//     Вам может понадобится функция chunk из библиотеки lodash.

// @ts-check

import chunk from 'lodash/chunk';

// BEGIN (write your solution here)
const hexToRgb = (hexColor) => {
    const pairs = chunk(hexColor.slice(1), 2);
    const result = pairs.map((pair) => parseInt(pair.join(''), 16));
    return { r: result[0], g: result[1], b: result[2] };
};


const rgbToHex = (...numbers) => {
    const map = numbers.map((num) => num.toString(16).padStart(2, 0));
    return `#${map.join('')}`;
};

export { rgbToHex, hexToRgb };
// END
